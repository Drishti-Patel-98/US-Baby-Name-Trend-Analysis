/* 
1. Find the overall most popular girl and boy names and show how they have changed in 
   popularity rankings over the years.
*/
-- STEP 1: MOST POPULAR GIRL NAME
SELECT NAME, SUM(BIRTHS) AS NUM_OF_BABIES
FROM NAMES
WHERE GENDER = 'F'
GROUP BY NAME
ORDER BY NUM_OF_BABIES DESC
LIMIT 1; -- JESSICA, 863121

-- STEP 2: MOST POPULAR BOY NAME
SELECT NAME, SUM(BIRTHS) AS NUM_OF_BABIES
FROM NAMES
WHERE GENDER = 'M'
GROUP BY NAME
ORDER BY NUM_OF_BABIES DESC
LIMIT 1; -- MICHAEL, 137418

-- STEP 3: POPULARITY RANKING CHANGING OVER THE YEARS FOR MOST POPULAR GIRL NAME
SELECT * FROM
(SELECT T1.YEAR AS YEAR
     , T1.NAME AS NAME
     , ROW_NUMBER() OVER(PARTITION BY YEAR ORDER BY NUM_OF_BABIES DESC) AS POPULARITY_RANK
FROM
	(SELECT YEAR, NAME, SUM(BIRTHS) AS NUM_OF_BABIES
	 FROM NAMES
	 WHERE GENDER = 'F'
	 GROUP BY YEAR, NAME
	) AS T1
) AS T2
WHERE NAME = 'JESSICA';

-- STEP 4: POPULARITY RANKING CHANGING OVER THE YEARS FOR MOST POPULAR GIRL NAME
SELECT * FROM
(SELECT T1.YEAR AS YEAR
     , T1.NAME AS NAME
     , ROW_NUMBER() OVER(PARTITION BY YEAR ORDER BY T1.NUM_OF_BABIES DESC) AS POPULARITY_RANK
FROM
	(SELECT YEAR, NAME, SUM(BIRTHS) AS NUM_OF_BABIES
	 FROM NAMES
	 WHERE GENDER = 'M'
	 GROUP BY YEAR, NAME
	) AS T1
) AS T2
WHERE NAME = 'MICHAEL'
;



/* 
2. Find the names with the biggest jumps in popularity from the first year of the data set to 
   the last year
*/
SELECT A1.NAME AS NAME
	 , A1.YEAR AS FIRST_YEAR
     , A1.POPULARITY_RANK AS FIRST_YEAR_POPULARITY
     , A2.YEAR AS LAST_YEAR
     , A2.POPULARITY_RANK AS LAST_YEAR_POPULARITY
     , (CAST(A2.POPULARITY_RANK AS SIGNED) - CAST(A1.POPULARITY_RANK AS SIGNED)) AS POPULARITY_JUMPS
FROM
(
	-- STEP 1. POPULARITY OF NAMES FROM THE FIRST YEAR
	SELECT T1.YEAR AS YEAR
		 , T1.NAME AS NAME
		 , ROW_NUMBER() OVER(PARTITION BY YEAR ORDER BY T1.NUM_OF_BABIES DESC) AS POPULARITY_RANK
	FROM
		(SELECT YEAR, NAME, SUM(BIRTHS) AS NUM_OF_BABIES
		 FROM NAMES
		 -- WHERE YEAR IN (SELECT MIN(YEAR) FROM NAMES)
		 GROUP BY YEAR, NAME
		) AS T1
	WHERE T1.YEAR IN (SELECT MIN(YEAR) FROM NAMES)
) AS A1
INNER JOIN
(
	-- STEP 2. POPULARITY OF NAMES FROM THE LAST YEAR
	SELECT T2.YEAR AS YEAR
		 , T2.NAME AS NAME
		 , ROW_NUMBER() OVER(PARTITION BY YEAR ORDER BY T2.NUM_OF_BABIES DESC) AS POPULARITY_RANK
	FROM
		(SELECT YEAR, NAME, SUM(BIRTHS) AS NUM_OF_BABIES
		 FROM NAMES
		 -- WHERE YEAR IN (SELECT MAX(YEAR) FROM NAMES)
		 GROUP BY YEAR, NAME
		) AS T2
	WHERE T2.YEAR IN (SELECT MAX(YEAR) FROM NAMES)
) AS A2
ON A1.NAME = A2.NAME
ORDER BY POPULARITY_JUMPS ASC;
;
